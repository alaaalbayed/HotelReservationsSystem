@page
@model RegisterModel
@using Microsoft.AspNetCore.Mvc.Localization;
@using System.Globalization;

@inject IViewLocalizer localizer

@{
	ViewData["Title"] = "Register";
}
<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="utf-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
	<meta name="description" content="Responsive Admin &amp; Dashboard Template based on Bootstrap 5">
	<meta name="author" content="AdminKit">
	<meta name="keywords" content="adminkit, bootstrap, bootstrap 5, admin, dashboard, template, responsive, css, sass, html, theme, front-end, ui kit, web">

	<link rel="preconnect" href="https://fonts.gstatic.com">
	<link rel="shortcut icon" href="~/assets/admin/img/icons/icon-48x48.png" />

	<link rel="canonical" href="https://demo-basic.adminkit.io/pages-sign-up.html" />

	<title>Sign Up</title>
    <style>
        #validator-output {
            .valid

        {
            color: green;
        }

        .invalid {
            color: red;
        }

        }
    </style>

	<link href="~/assets/admin/css/app.css" rel="stylesheet">
	<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;600&display=swap" rel="stylesheet">
</head>

<body>
	<main class="d-flex w-100">
		<div class="container d-flex flex-column">
			<div class="row vh-100">
				<div class="col-sm-10 col-md-8 col-lg-6 col-xl-5 mx-auto d-table h-100">
					<div class="d-table-cell align-middle">

						<div class="text-center mt-3 mb-4">
							<h1 class="h2">Get started</h1>
						</div>

						<div class="card">
							<div class="card-body">
								<div class="m-sm-3">
									<form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post" enctype="multipart/form-data">
										<div class="mb-3">
											<label asp-for="Input.FirstName"></label>
											<input asp-for="Input.FirstName" class="form-control" autocomplete="firstname" aria-required="true" />
											<span asp-validation-for="Input.FirstName" class="text-danger"></span>
										</div>
										<div class="mb-3">
											<label asp-for="Input.LastName"></label>
											<input asp-for="Input.LastName" class="form-control" autocomplete="lastname" aria-required="true" />
											<span asp-validation-for="Input.LastName" class="text-danger"></span>
										</div>
										<div class="mb-3">
											<label asp-for="Input.Email"></label>
											<input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" />
											<span asp-validation-for="Input.Email" class="text-danger"></span>
										</div>
										<div class="mb-3">
											<label asp-for="Input.Password"></label>
                                            <input asp-for="Input.Password" id="exampleInputPassword1" class="form-control" autocomplete="new-password" aria-required="true">
											<span asp-validation-for="Input.Password" class="text-danger"></span>
										</div>
										<div class="mb-3">
											<label asp-for="Input.ConfirmPassword"></label>
                                            <input asp-for="Input.ConfirmPassword" id="exampleInputPassword1-confirmation" class="form-control" autocomplete="new-password" aria-required="true" />
											<span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
										</div>
                                        <div id="validator-output"></div>
										<div class="mb-3 mt-3">
											<label asp-for="Input.PhoneNumber"></label>
											<input type="number" asp-for="Input.PhoneNumber" class="form-control" autocomplete="phonenumber" aria-required="true" />
											<span asp-validation-for="Input.PhoneNumber" class="text-danger"></span>
										</div>
										<div class="mb-3">
											<label asp-for="Input.Address"></label>
											<input asp-for="Input.Address" class="form-control" autocomplete="none" aria-required="true" />
											<span asp-validation-for="Input.Address" class="text-danger"></span>
										</div>

										<!-- Image -->
										<div class="mb-3">
											<label asp-for="Input.Image"></label>
                                            <input type="file" asp-for="Input.Image" class="form-control" autocomplete="none" aria-required="true" accept="image/*" />
											<span asp-validation-for="Input.Image" class="text-danger"></span>
										</div>

										<div class="d-grid gap-2 mt-3">
											<button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Sign up</button>
										</div>

									</form>
								</div>
							</div>
						</div>
						<div class="text-center mb-3">
							@localizer["AlreadyHaveAccount"] <a href="Login" value="@localizer["SignIn"]">@localizer["SignIn"]</a>
						</div>
					</div>
				</div>
			</div>
		</div>
	</main>
	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.13/jquery.validate.unobtrusive.min.js"></script>

	<script src="~/assets/admin/js/app.js"></script>
	<script>
		$(function () {
  $("#validator-output").realtimePasswordValidator({
    debug: true,
    input1: $("#exampleInputPassword1"),
    input2: $("#exampleInputPassword1-confirmation"),
    validators: [
      {
        regexp: "[a-z]",
        message: "1 lowercase"
      },
      {
        regexp: "[A-Z]",
        message: "1 uppercase"
      },
      {
        regexp: "[0-9]",
        message: "1 number"
      },
      {
        regexp: ".*[!@@#$%?=*&]",
        message: "1 special char !@@#$%?=*&"
      },
    ],
    ok: function (instance) {
      console.log("ok");

      $("#submit").removeAttr("disabled");
    },
    ko: function (instance) {
      console.log("ko");
      $("#submit").attr("disabled", "");
    }
  });
});

// plugin definition
(function ($, window, document, undefined) {
  "use strict";
  var pluginName = "realtimePasswordValidator",
    defaults = {
      debug: false
    };
  function Plugin(element, options) {
    this.element = element;
    this.settings = $.extend({}, defaults, options);
    this._defaults = defaults;
    this._name = pluginName;
    this.init();
  }

  $.extend(Plugin.prototype, {
    init: function () {
      this.settings.input1.on("input", { self: this }, this.validateEvent);
      this.settings.input2.on("input", { self: this }, this.validateEvent);
    },

    validateEvent: function (event) {
      const self = event.data.self;
      const messages = [];
      let valid_count = 0;
      $(self.element).empty();
      $(self.settings.validators).each(function (index, validator) {
        let valid = false;
        if (validator.regexp)
          valid = new RegExp(validator.regexp).test(self.settings.input1.val());
        if (validator.compare)
          valid = self.settings.input1.val() == $(self.settings.input2).val();
        const message = $("<div>" + validator.message + "</div>");
        message.addClass(valid ? "valid" : "invalid");
        if (self.settings.input1.val().length > 0)
          $(self.element).append(message);
        if (valid) valid_count++;
        if (this.debug)
          console.log(
            index,
            self.settings.input1.val(),
            validator.message,
            valid
          );
      });
      if (valid_count == self.settings.validators.length) {
        if (self.settings.ok) self.settings.ok(self);
      } else {
        if (self.settings.ko) self.settings.ko(self);
      }
      if (this.debug)
        console.log(
          "valid",
          valid_count,
          "of",
          self.settings.validators.length
        );
    }
  });

  $.fn[pluginName] = function (options) {
    return this.each(function () {
      if (!$.data(this, "plugin_" + pluginName)) {
        $.data(this, "plugin_" + pluginName, new Plugin(this, options));
      }
    });
  };
})(jQuery, window, document);
	</script>

</body>

</html>

@section Scripts {
	<partial name="_ValidationScriptsPartial" />
}
